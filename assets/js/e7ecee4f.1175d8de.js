"use strict";(self.webpackChunkcrowdin_cli_website=self.webpackChunkcrowdin_cli_website||[]).push([[3051],{8196:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/2024/05/28/cli-v4","metadata":{"permalink":"/crowdin-cli/blog/2024/05/28/cli-v4","editUrl":"https://github.com/lingui/js-lingui/tree/main/website/blog/2024-05-28-cli-v4/index.md","source":"@site/blog/2024-05-28-cli-v4/index.md","title":"Crowdin CLI 4.0","description":"Learn how to manage your project\'s localization files from the command line. Synchronize your source language files and translations with your Crowdin project.","date":"2024-05-28T00:00:00.000Z","formattedDate":"May 28, 2024","tags":[{"label":"release","permalink":"/crowdin-cli/blog/tags/release"}],"readingTime":5.475,"hasTruncateMarker":true,"authors":[{"name":"Andrii Bodnar","title":"Engineering Manager","url":"https://github.com/andrii-bodnar","imageURL":"https://github.com/andrii-bodnar.png","key":"andrii-bodnar"},{"name":"Yevheniy Oliynyk","title":"Full stack Java/NodeJS developer","url":"https://github.com/yevheniyJ","imageURL":"https://github.com/yevheniyJ.png","key":"yevheniyJ"}],"frontMatter":{"title":"Crowdin CLI 4.0","description":"Learn how to manage your project\'s localization files from the command line. Synchronize your source language files and translations with your Crowdin project.","authors":["andrii-bodnar","yevheniyJ"],"image":"./img/social-card.png","tags":["release"]},"nextItem":{"title":"Files Management","permalink":"/crowdin-cli/blog/2024/01/23/files-management"}},"content":"Today we are happy to announce Crowdin CLI **4.0**! \ud83e\udd73\\n\\n![social-card image](./img/social-card.png)\\n\\nIt has been almost five years since the release of Crowdin CLI 3.0. During this time, we have received extensive feedback from our users and worked diligently to improve the tool. As a result, we\'ve made many changes and improvements.\\n\\nThe new version of Crowdin CLI introduces a lot of new features and enhancements. We\'ve added new commands, updated existing ones, and significantly improved the overall user experience.\\n\\nThis post is intended to highlight the most important changes and help you migrate from CLI 3.x with ease. It is not a comprehensive guide, but rather a list of the most important changes.\\n\\n\x3c!--truncate--\x3e\\n\\n## Requirements\\n\\nAs part of this release, the minimum Java version has been updated to **17 LTS**.\\n\\n## New commands\\n\\n- [`crowdin config`](/commands/crowdin-config)\\n- [`crowdin project`](/commands/crowdin-project)\\n- [`crowdin language`](/commands/crowdin-language)\\n- [`crowdin branch clone`](/commands/crowdin-branch-clone)\\n- [`crowdin branch merge`](/commands/crowdin-branch-merge)\\n- [`crowdin completion`](/autocompletion)\\n\\n## New command options\\n\\n| <div style={{width:150 + \'px\'}}>Command</div> | Option/Description                                                                                                 |\\n|-----------------------------------------------|--------------------------------------------------------------------------------------------------------------------|\\n| `init`                                        | <kbd>--quiet</kbd> option to skip interactive input prompts                                                        |\\n| `string add`                                  | <kbd>--branch</kbd> option to specify the branch to which the new string should be added                           |\\n| `string list`                                 | <kbd>--directory</kbd> and <kbd>--scope</kbd> options to filter strings by directory and scope                     |\\n| `pre-translate`                               | <kbd>--file</kbd> option to specify the file(s) in the Crowdin project to pre-translate                            |\\n| `pre-translate`                               | <kbd>ai</kbd> method and <kbd>--ai-prompt</kbd> parameter to allow pre-translation via AI                          |\\n| `file upload`                                 | <kbd>--type</kbd> and <kbd>--parser-version</kbd> options to specify the file type and parser version respectively |\\n| `file upload`                                 | <kbd>--context</kbd> option to provide a context about the whole file                                              |\\n| `file list`                                   | <kbd>--verbose</kbd> option to show more information about the files                                               |\\n| `language list`                               | <kbd>--all</kbd> option to list all languages for the current account                                              |\\n\\n## Command updates\\n\\n### Pre-translate\\n\\nWe\'ve made significant changes to the [`pre-translate`](/commands/crowdin-pre-translate) command. The command now requires the <kbd>--file</kbd> parameter for file-based projects. The <kbd>--file</kbd> parameter determines which files to pre-translate. Previously, the command relied on the current configuration, and it was only possible to pre-translate the files that matched the configuration patterns. Now you can specify any file(s) in the Crowdin project to pre-translate.\\n\\nTip: Use the [`file list`](/commands/crowdin-file-list) command to get the file paths in the current project.\\n\\n### String\\n\\n* The [`string edit`](/commands/crowdin-string-edit) command changes:\\n  * Moved <kbd>id</kbd> to a parameter instead of a command option.\\n  * Now <kbd>--identifier</kbd> is used as an option to edit and not to find the needed string.\\n* The [`string delete`](/commands/crowdin-string-delete) command changes:\\n  * Moved <kbd>id</kbd> to a parameter instead of a command option. Now only 1 string can be removed at a time.\\n  * Removed the <kbd>--text</kbd> and <kbd>--identifier</kbd> options. Only ID is used as a string identifier.\\n* The `comment` command has been replaced with the [`comment add`](/commands/crowdin-comment-add) command.\\n\\n```diff\\n-crowdin string add Download --file main/src/strings.xml --identifier \\"download\\"\\n+crowdin string add Download --file src/strings.xml --branch main --identifier \\"download\\"\\n\\n-crowdin string edit --id 12 --text new\\n+crowdin string edit 12 --text new\\n\\n-crowdin string delete --id 12\\n+crowdin string delete 12\\n```\\n\\n### List\\n\\n* The `list branches` command has been replaced with the [`branch list`](/commands/crowdin-branch-list) command.\\n* The `list sources` command has been replaced with the [`config sources`](/commands/crowdin-config-sources) command.\\n* The `list translations` command has been replaced with the [`config translations`](/commands/crowdin-config-translations) command.\\n* The `list project` command has been replaced with the [`file list`](/commands/crowdin-file-list) command.\\n* The `list languages` command has been replaced with the [`language list`](/commands/crowdin-language-list) command.\\n\\n```diff\\n-crowdin list branches\\n+crowdin branch list\\n\\n-crowdin list project\\n+crowdin file list\\n\\n-crowdin list sources\\n+crowdin config sources\\n\\n-crowdin list translations\\n+crowdin config translations\\n\\n-crowdin list languages\\n+crowdin language list\\n```\\n\\n:::info\\nThe default language code for the `language list` command output has been changed from `two_letters_code` to `id`.\\n\\nThis change makes it more convenient, as the `id` is used consistently for the `--language` parameter across various commands.\\n:::\\n\\n### Glossary\\n\\nThe <kbd>--name</kbd> option has been removed from the `upload` and `download` commands, and the <kbd><id\\\\></kbd> parameter is now used instead:\\n\\n```diff\\n-crowdin glossary download --id <id>\\n-crowdin glossary download --name <name>\\n+crowdin glossary download <id>\\n\\n-crowdin glossary upload <file> --name <name>\\n+crowdin glossary upload <file> --id <id>\\n```\\n\\nTip: Use the [`glossary list`](/commands/crowdin-glossary-list) command to get the `id`.\\n\\n### TM\\n\\nThe <kbd>--name</kbd> option has been removed from `upload` and `download` commands, and the <kbd><id\\\\></kbd> parameter is now used instead:\\n\\n```diff\\n-crowdin tm download --id <id>\\n-crowdin tm download --name <name>\\n+crowdin tm download <id>\\n\\n-crowdin tm upload <file> --name <name>\\n+crowdin tm upload <file> --id <id>\\n```\\n\\nTip: Use the [`tm list`](/commands/crowdin-tm-list) command to get the `id`.\\n\\n### Screenshot\\n\\nThe <kbd>--name</kbd> option has been replaced with the <kbd><id\\\\></kbd> parameter for the `delete` command because there can be multiple screenshots with the same name:\\n\\n```diff\\n-crowdin screenshot delete <name>\\n+crowdin screenshot delete <id>\\n```\\n\\nTip: Use the [`screenshot list`](/commands/crowdin-screenshot-list) command to get the `id`.\\n\\n### Init\\n\\nThe `generate` alias has been removed:\\n\\n```diff\\n-crowdin generate\\n+crowdin init\\n```\\n\\n### Lint\\n\\nThe `lint` command has been replaced with the [`config lint`](/commands/crowdin-config-lint) command:\\n\\n```diff\\n- crowdin lint\\n+ crowdin config lint\\n```\\n\\n### Bundle\\n\\nThe `download bundle` command has been replaced with the [`bundle download`](/commands/crowdin-bundle-download) command.\\n\\n## Exit codes\\n\\nThis release also includes more exit codes (previously we only had `0` for success and `1` for failure).\\n\\nSee the [official documentation](/exit-codes) for more details.\\n\\n## Environment variables\\n\\nPreviously, it was necessary to specify the environment variables in the configuration file in order to load the configuration from them.\\n\\nNow the CLI can automatically pick up the environment variables if they are set in the shell. The supported environment variables are:\\n\\n- `CROWDIN_PROJECT_ID`\\n- `CROWDIN_PERSONAL_TOKEN`\\n- `CROWDIN_BASE_PATH`\\n- `CROWDIN_BASE_URL`\\n\\nThanks to this change, it\'s now easier to work with the CLI in CI/CD environments, especially in the no-configuration-file use case.\\n\\nVisit the [Configuration File](/configuration#environment-variables) article for more details.\\n\\n## Deprecations and backward compatibility\\n\\n### Download targets\\n\\nThe deprecated `download targets` command has been removed. The configuration file no longer supports the `targets` section as well. Use [Bundles](/commands/crowdin-bundle) instead.\\n\\n### Task command\\n\\nRemoved backward compatibility for file numeric id in the [`task add`](/commands/crowdin-task-add) command. Now only file path is supported:\\n\\n```diff\\n-crowdin task add --file 12 --language uk\\n+crowdin task add --file src/strings.xml --language uk\\n```\\n\\n## Command output updates\\n\\nIn this release, we\'ve also reviewed and improved the output of many commands to make them more informative and user-friendly. Changes include `list`, `add`, `upload`, `download`, `delete`, and other commands for various resources.\\n\\n:::tip\\nNeed help or have questions? [Let\'s discuss it](https://github.com/crowdin/crowdin-cli/discussions/781)!\\n:::"},{"id":"/2024/01/23/files-management","metadata":{"permalink":"/crowdin-cli/blog/2024/01/23/files-management","editUrl":"https://github.com/lingui/js-lingui/tree/main/website/blog/2024-01-23-files-management/index.md","source":"@site/blog/2024-01-23-files-management/index.md","title":"Files Management","description":"Learn how to manage your project\'s localization files from the command line. Synchronize your source language files and translations with your Crowdin project.","date":"2024-01-23T00:00:00.000Z","formattedDate":"January 23, 2024","tags":[{"label":"tutorial","permalink":"/crowdin-cli/blog/tags/tutorial"}],"readingTime":4.35,"hasTruncateMarker":true,"authors":[{"name":"Andrii Bodnar","title":"Engineering Manager","url":"https://github.com/andrii-bodnar","imageURL":"https://github.com/andrii-bodnar.png","key":"andrii-bodnar"}],"frontMatter":{"title":"Files Management","description":"Learn how to manage your project\'s localization files from the command line. Synchronize your source language files and translations with your Crowdin project.","authors":"andrii-bodnar","tags":["tutorial"]},"prevItem":{"title":"Crowdin CLI 4.0","permalink":"/crowdin-cli/blog/2024/05/28/cli-v4"}},"content":"Crowdin CLI allows you to manage your project\'s localization files from the command line. You can easily synchronize your source language files and translations with your Crowdin project.\\n\\nThere are several commands you can use to manage your files. The CLI provides high-level commands that are easy to use and low-level commands that give you more flexibility and control.\\n\\nThe high level commands are [`crowdin upload`](/commands/crowdin-upload) and [`crowdin download`](/commands/crowdin-download). These commands are easy to use and they rely mostly on the configuration file.\\n\\nThe low-level commands include [`crowdin file upload`](/commands/crowdin-file-upload), [`crowdin file download`](/commands/crowdin-file-download), and [`crowdin file delete`](/commands/crowdin-file-delete). These commands are more like a lightweight wrapper over the [Crowdin API](https://developer.crowdin.com/api/v2/). They give you more flexibility and control over the file management process.\\n\\n\x3c!--truncate--\x3e\\n\\n## The `upload` and `download` commands\\n\\n### Configuration\\n\\nThese commands are usually being used along with the configuration file.\\n\\nFor example, you have a project with the following structure:\\n\\n```bash\\n.\\n\u251c\u2500\u2500 locales\\n\u2502   \u251c\u2500\u2500 en\\n\u2502   \u2502   \u2514\u2500\u2500 messages.xml\\n\u2502   \u2514\u2500\u2500 fr\\n\u2502   \u2502   \u2514\u2500\u2500 messages.xml\\n\u2502   \u2514\u2500\u2500 de\\n\u2502   \u2502   \u2514\u2500\u2500 messages.xml\\n\u2502   \u2514\u2500\u2500 uk\\n\u2502       \u2514\u2500\u2500 messages.xml\\n\u2514\u2500\u2500 ...\\n```\\n\\nLet\'s create a simple configuration file:\\n\\n```bash\\ncrowdin init -s \\"locales/en/*.xml\\" -t \\"locales/%two_letters_code%/%original_file_name%\\"\\n```\\n\\nThis command prompts you for the project identifier and API token. It will then create a configuration file with the following content:\\n\\n```yaml\\n\\"project_id\\": \\"<your-crowdin-project-id>\\"\\n\\"api_token\\": \\"<your-personal-access-token>\\"\\n\\"base_path\\": \\".\\"\\n\\"base_url\\": \\"https://api.crowdin.com\\"\\n\\n\\"preserve_hierarchy\\": true\\n\\nfiles: [\\n  {\\n    \\"source\\": \\"locales/en/*.xml\\",\\n    \\"translation\\": \\"locales/%two_letters_code%/%original_file_name%\\"\\n  }\\n]\\n```\\n\\nLet\'s take a closer look at some of the configuration options.\\n\\nThe `source` and `translation` configurations represent the patterns for the source and translation files. The `source` configuration is a [glob](https://en.wikipedia.org/wiki/Glob_(programming)) pattern pointing to the source files. The `translation` configuration is a path to the translation files (existing ones or where to put downloaded translations). The `%two_letters_code%` and `%original_file_name%` are the placeholders that will be replaced by the language code and the original source file name, respectively.\\n\\n:::info\\nVisit the [Configuration](/configuration) page to learn more about the configuration file.\\n:::\\n\\n### Upload content\\n\\nLet\'s **upload** the source files and existing translations to Crowdin:\\n\\n```bash\\ncrowdin upload sources\\ncrowdin upload translations -l fr\\n```\\n\\nWe can also check the translation and proofreading progress before downloading the translations:\\n\\n```bash\\ncrowdin status\\n```\\n\\n### Download content\\n\\nWhen the translations are ready, we can **download** them:\\n\\n```bash\\ncrowdin download translations\\n```\\n\\nThe above command will download all the translations to the path specified in the `translation` configuration.\\n\\n:::tip\\nYou can also use short aliases: `crowdin push`, `crowdin pull`.\\n:::\\n\\nTo download the source files from Crowdin, run the following command:\\n\\n```bash\\ncrowdin download sources\\n```\\n\\n## The `file` command\\n\\nThe [`file`](/commands/crowdin-file) command is a low-level command that allows you to manage your files with more flexibility and control.\\n\\nThis command does not require a `files` section in the configuration file, or a configuration file at all. You can specify all the necessary parameters in the command itself.\\n\\n### Upload content\\n\\nLet\'s use the same project structure as in the previous example and try to **upload** the source files and existing translations to Crowdin:\\n\\n```bash\\ncrowdin file upload locales/en/messages.xml -d messages.xml\\n```\\n\\nThe command above will take the file `locales/en/messages.xml` and upload it to Crowdin as `messages.xml` in the root directory. The `-d`/`--dest` option stands for `destination` and allows you to specify the path to the file in Crowdin. If you omit the `-d` option, the file will be uploaded to the root directory with the same path as the source file.\\n\\nYou can upload strings to string-based projects as well:\\n\\n```bash\\ncrowdin file upload locales/en/messages.xml --branch main --cleanup-mode --update-strings\\n```\\n\\nThe `--branch` option is required for string-based projects. The `--cleanup-mode` and `--update-strings` options are optional. Use the `--update-strings` option to update strings with the same identifiers and the `--cleanup-mode` option to remove strings that are not present in the uploaded file.\\n\\nTo **upload translations** you need to specify the `-l`/`--language` option:\\n\\n```bash\\ncrowdin file upload locales/fr/messages.xml -d messages.xml -l fr\\n```\\n\\nThe `-d`/`--dest` option is the path to the file in Crowdin where the translations should be uploaded. `-l` - [Crowdin language code](https://developer.crowdin.com/language-codes/).\\n\\nVisit the [`crowdin file upload`](/commands/crowdin-file-upload) page to see all the options available.\\n\\n### Download content\\n\\nUsing the `crowdin file download` you can download either the source files or translations. Let\'s try to download the source file from Crowdin:\\n\\n```bash\\ncrowdin file download messages.xml -d locales/en/messages.xml\\n```\\n\\nThe above command will download the `messages.xml` file from Crowdin and store it in the `locales/en/messages.xml` path.\\n\\nTo download translations, you need to specify the `-l`/`--language` option:\\n\\n```bash\\ncrowdin file download messages.xml -d locales/fr -l fr\\n```\\n\\nThe `-d`/`--dest` option here is the path to the file on your local machine where the translations should be stored. `-l` - [Crowdin language code](https://developer.crowdin.com/language-codes/).\\n\\n:::info\\nYou can also use language code placeholders in the `--dest` option. For example, `locales/%android_code%`.\\nAvailable codes: `%two_letters_code%`, `%three_letters_code%`, `%locale%`, `%android_code%`, `%osx_code%`, `%osx_locale%`.\\n:::\\n\\nVisit the [`crowdin file download`](/commands/crowdin-file-download) page to see all the available options.\\n\\n:::tip\\nThe `file` commands can easily be used without the configuration file. For example:\\n\\n```bash\\ncrowdin file upload locales/en/messages.xml \\\\\\n  -d messages.xml \\\\\\n  -i <your-project-id> \\\\\\n  -T <your-personal-access-token> \\\\\\n  /\\n```\\n:::\\n\\n## Further Reading\\n\\n- [Configuration](/configuration)\\n- [Advanced Usage](/advanced)\\n- [CI/CD Integration](/ci-cd)\\n- [FAQ](/faq)"}]}')}}]);